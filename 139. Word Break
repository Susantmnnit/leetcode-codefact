class Solution {
public:
    bool solve(int i,string s,unordered_set<string>st,vector<int>&dp){
        if(i==s.size()){
            return dp[i]=1;
        }

        if(dp[i]!=-1){
            return dp[i];
        }
        string segment="";
        for(int j=i;j<s.size();j++){
            segment+=s[j];
            if(st.find(segment)!=st.end()){
                if(solve(j+1,s,st,dp))
                    return dp[i]=1;
            }
        }
        return dp[i]=0;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string>st;
        vector<int>dp(s.size()+1,-1);
        for(int i=0;i<wordDict.size();i++){
            st.insert(wordDict[i]);
        }

        return solve(0,s,st,dp);
    }
};
