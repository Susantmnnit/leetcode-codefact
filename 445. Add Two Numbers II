class Solution {
public:
    ListNode* reverse(ListNode* l){
        ListNode* prev=NULL;
        ListNode* next=NULL;
        ListNode* curr=l;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1=reverse(l1);
        l2=reverse(l2);
        int carry=0;
        ListNode* ans=NULL;
        while(l1!=NULL && l2!=NULL){
            int sum=(l1->val)+(l2->val)+carry;
            ListNode* temp=new ListNode(sum%10);
            temp->next=ans;
            ans=temp;
            carry=sum/10;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1!=NULL){
            int sum=(l1->val)+carry;
            ListNode* temp=new ListNode(sum%10);
            temp->next=ans;
            ans=temp;
            carry=sum/10;
            l1=l1->next;
        }
        while(l2!=NULL){
            int sum=(l2->val)+carry;
            ListNode* temp=new ListNode(sum%10);
            temp->next=ans;
            ans=temp;
            carry=sum/10;
            l2=l2->next;
        }
        while(carry>0){
            ListNode* temp=new ListNode(carry%10);
            temp->next=ans;
            ans=temp;
            carry=carry/10;
        }
        return ans;
    }
};
